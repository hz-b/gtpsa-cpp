name: ubuntu-deb-package
description : "builds gtpsa c++ package"

runs:
  using: "composite"
  steps:
    - name: checkout gtpsa-cpp code
      uses: actions/checkout@v4
      with:
        submodules: True

#    - name: install apt dependencies
#      run: |
#         sudo apt update
#         # gfortran ... currently for mad-ng gtpsa library
#         sudo apt install g++ gfortran cmake make libarmadillo-dev
#         # deliberatly only installing a subset of boost
#         sudo apt install  libboost-chrono-dev libboost-filesystem-dev libboost-program-options-dev libboost-test-dev
#         # for building the python interface ... hopefully python3-xarray is not needed this rather heavy
#
#    - name: Configure CMake
#      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
#      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
#      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
#
#    - name: Build
#      # Build your program with the given configuration
#      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
#
#    - name: Test
#      working-directory: ${{github.workspace}}/build
#      # Execute tests defined by the CMake configuration.
#      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#      run: ctest -C ${{env.BUILD_TYPE}}
#
#    - name: make tar package
#      # need to be root to install ?
#      run: |
#          (cd ${{github.workspace}}/build && make package)
#
#    - name: Upload artifact for python build
#      uses: actions/upload-artifact@v4
#      with:
#         name: gtpsa-release-deb
#         path: ${{github.workspace}}/build/*.deb
